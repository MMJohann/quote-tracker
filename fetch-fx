#!/usr/bin/python

import httplib
import json
import datetime
import time
import sys
import forex

debug = 0

if not debug:
    from google.appengine.api import memcache
    from google.appengine.api import mail

# fetch url of fx-experts application
def new_bar (period, pair1, pair2, ts, o, h, l, c):
    srv = "fx-experts.appspot.com"
    req = "/new_bar?pair1=%s&pair2=%s&period=%s&ts=%d&o=%f&h=%f&l=%f&c=%f" % (pair1, pair2, period, ts, o, h, l, c)
    conn = httplib.HTTPConnection (srv)
    print "Request: http://%s%s" % (srv, req)
    conn.request ("GET", req)
    r = conn.getresponse ()
    reply = r.read ()
    print "Reply: %s" % reply

def ts_to_string (ts):
    return "%s (%s UTC)" % (ts, datetime.datetime.utcfromtimestamp (ts).__str__ ())

# Available pairs:
# Primary: EUR/USD, AUD/USD, USD/CAD, USD/JPY, GBP/USD, USD/CHF, NZD/USD, USD/UKD, USD/SGD, USD/ZAR, USD/MXN
# Crosses: EUR/CHF, EUR/GBP, EUR/JPY, GBP/JPY, EUR/CAD, EUR/AUD, GBP/CHF, CHF/JPY, AUD/CAD, AUD/JPY, CAD/JPY, GBP/AUD, AUD/NZD, ZAR/JPY, 

pairs = [('EUR', 'USD'), ('AUD', 'USD'), ('USD', 'CAD'), ('USD', 'JPY'), ('GBP', 'USD'), ('USD', 'CHF')]

fx = forex.FXFetcher ()

print 'Content-type: text/plain'
print

for pair in pairs:
    pair1, pair2 = pair
    for per_name, per_data in forex.FXFetcher.periods.iteritems ():
        # memcache key of last timestamp
        key = "%s-%s-%s" % (pair1, pair2, per_name)
        print 'Check: %s-%s, %s' % (pair1, pair2, per_name)

        per_arg = per_data['arg']
        per_int = per_data['interval']

        print 'Current TS: %s' % ts_to_string (time.time ())

        # obtain timestamp of last bar
        if not debug:
            ts = memcache.get (key)
            if ts == None:
                print 'TS not found in memcache'
                ts = 0
            else:
                print 'We have memcached ts: %s' % ts_to_string (ts)
            if time.time () - ts < per_int:
                print '%s-%s, %s skipped' % (pair1, pair2, per_name)
                continue

        # perform server's request
        data = fx.fetch (pair1, pair2, per_name, 3)
        if not data:
            print 'Download error, skip it:', sys.exc_info ()
        else:
            print 'We got from srv: ', data
            # last complete bar value
            ts1 = data['time'][1]
            print 'Last complete bar: %s' % ts_to_string (ts1)
            if not debug:
                if ts1 > ts:
                    # queue new bars for processing
                    new_bar (per_name, pair1, pair2, ts1, float (data['data'][1]['O']), float (data['data'][1]['H']),
                             float (data['data'][1]['L']), float (data['data'][1]['C']))
                else:
                    print 'We processed this bar already'
                memcache.set (key, ts1)
fx.close ()
